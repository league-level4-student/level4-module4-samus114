 :)     1. Encapsulate the member variables of the abstract Polymorph class. DONE

 :)     2. Create new member variables for the width and height of the polymorph and substitute them for the hard-coded numbers in the draw method of the BluePolymorph class. Make sure they are properly encapsulated.

 :)     3. Create a new sub-class of the Polymorph class called RedMorph. Make this polymorph render red instead of blue. Create an object of RedMorph in the PolymorphWindow class and test it.

done 4. Create a new sub-class of the Polymorph class called MovingMorph. Add code to the update method to make MovingMorph objects move around the screen. Create a MovingMorph object in your PolymorphWindow class and test it. Don't forget to call the update method.

done 5. That was fun! Now, delete all references to Polymorphs inside your PolymorphWindow class. Create an ArrayList of Polymorphs inside your PolymorphWindow class. Initialize the ArrayList and add a bunch of different types of Polymorph objects to the array list.

done 6. Use for-each loops to call the draw and update method for all the Polymorphs in the list.

7. Let's create more Polymorphs! Create a new sub-class of Polymorphs for each of the followingâ€¦
did but code crashed Mr. Daniel gave approval	a) Create a Polymorph that moves in a circle. hint: Math.sin() Math.cos()
did but code crashed Mr. Daniel gave approval	b) Create a Polymorph that follows your mouse.
	c) Create a Polymorph that displays an image.
 did	d) Create a Polymorph that displays a JOptionPane message dialog when clicked.
